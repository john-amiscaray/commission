{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { PermissionType } from '../core-plugin-definitions';\n\nvar PermissionsPluginWeb =\n/** @class */\nfunction (_super) {\n  __extends(PermissionsPluginWeb, _super);\n\n  function PermissionsPluginWeb() {\n    return _super.call(this, {\n      name: 'Permissions'\n    }) || this;\n  }\n\n  PermissionsPluginWeb.prototype.query = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var navigator, name, ret;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            navigator = window.navigator;\n\n            if (!navigator.permissions) {\n              return [2\n              /*return*/\n              , Promise.reject('This browser does not support the Permissions API')];\n            }\n\n            name = options.name === PermissionType.Photos ? 'camera' : options.name;\n            return [4\n            /*yield*/\n            , navigator.permissions.query({\n              name: name\n            })];\n\n          case 1:\n            ret = _a.sent();\n            return [2\n            /*return*/\n            , {\n              state: ret.state\n            }];\n        }\n      });\n    });\n  };\n\n  return PermissionsPluginWeb;\n}(WebPlugin);\n\nexport { PermissionsPluginWeb };\nvar Permissions = new PermissionsPluginWeb();\nexport { Permissions }; //# sourceMappingURL=permissions.js.map","map":null,"metadata":{},"sourceType":"module"}