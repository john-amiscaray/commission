{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\n\nvar BrowserPluginWeb =\n/** @class */\nfunction (_super) {\n  __extends(BrowserPluginWeb, _super);\n\n  function BrowserPluginWeb() {\n    return _super.call(this, {\n      name: 'Browser',\n      platforms: ['web']\n    }) || this;\n  }\n\n  BrowserPluginWeb.prototype.open = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._lastWindow = window.open(options.url, options.windowName || '_blank');\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  };\n\n  BrowserPluginWeb.prototype.prefetch = function (_options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // Does nothing\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  };\n\n  BrowserPluginWeb.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        this._lastWindow && this._lastWindow.close();\n        return [2\n        /*return*/\n        , Promise.resolve()];\n      });\n    });\n  };\n\n  return BrowserPluginWeb;\n}(WebPlugin);\n\nexport { BrowserPluginWeb };\nvar Browser = new BrowserPluginWeb();\nexport { Browser }; //# sourceMappingURL=browser.js.map","map":null,"metadata":{},"sourceType":"module"}