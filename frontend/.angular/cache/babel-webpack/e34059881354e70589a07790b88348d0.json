{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { uuid4 } from '../util';\n\nvar DevicePluginWeb =\n/** @class */\nfunction (_super) {\n  __extends(DevicePluginWeb, _super);\n\n  function DevicePluginWeb() {\n    return _super.call(this, {\n      name: 'Device',\n      platforms: ['web']\n    }) || this;\n  }\n\n  DevicePluginWeb.prototype.getInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var ua, uaFields;\n      return __generator(this, function (_a) {\n        ua = navigator.userAgent;\n        uaFields = this.parseUa(ua);\n        return [2\n        /*return*/\n        , Promise.resolve({\n          model: uaFields.model,\n          platform: 'web',\n          appVersion: '',\n          appBuild: '',\n          appId: '',\n          appName: '',\n          operatingSystem: uaFields.operatingSystem,\n          osVersion: uaFields.osVersion,\n          manufacturer: navigator.vendor,\n          isVirtual: false,\n          uuid: this.getUid()\n        })];\n      });\n    });\n  };\n\n  DevicePluginWeb.prototype.getBatteryInfo = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var battery, e_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            battery = {};\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , navigator.getBattery()];\n\n          case 2:\n            battery = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            e_1 = _a.sent();\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            return [2\n            /*return*/\n            , Promise.resolve({\n              batteryLevel: battery.level,\n              isCharging: battery.charging\n            })];\n        }\n      });\n    });\n  };\n\n  DevicePluginWeb.prototype.getLanguageCode = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , {\n          value: navigator.language\n        }];\n      });\n    });\n  };\n\n  DevicePluginWeb.prototype.parseUa = function (_ua) {\n    var uaFields = {};\n    var start = _ua.indexOf('(') + 1;\n\n    var end = _ua.indexOf(') AppleWebKit');\n\n    if (_ua.indexOf(') Gecko') !== -1) {\n      end = _ua.indexOf(') Gecko');\n    }\n\n    var fields = _ua.substring(start, end);\n\n    if (_ua.indexOf('Android') !== -1) {\n      uaFields.model = fields.replace('; wv', '').split('; ').pop().split(' Build')[0];\n      uaFields.osVersion = fields.split('; ')[1];\n    } else {\n      uaFields.model = fields.split('; ')[0];\n\n      if (navigator.oscpu) {\n        uaFields.osVersion = navigator.oscpu;\n      } else {\n        if (_ua.indexOf('Windows') !== -1) {\n          uaFields.osVersion = fields;\n        } else {\n          var lastParts = fields.split('; ').pop().replace(' like Mac OS X', '').split(' ');\n          uaFields.osVersion = lastParts[lastParts.length - 1].replace(/_/g, '.');\n        }\n      }\n    }\n\n    if (/android/i.test(_ua)) {\n      uaFields.operatingSystem = 'android';\n    } else if (/iPad|iPhone|iPod/.test(_ua) && !window.MSStream) {\n      uaFields.operatingSystem = 'ios';\n    } else if (/Win/.test(_ua)) {\n      uaFields.operatingSystem = 'windows';\n    } else if (/Mac/i.test(_ua)) {\n      uaFields.operatingSystem = 'mac';\n    } else {\n      uaFields.operatingSystem = 'unknown';\n    }\n\n    return uaFields;\n  };\n\n  DevicePluginWeb.prototype.getUid = function () {\n    var uid = window.localStorage.getItem('_capuid');\n\n    if (uid) {\n      return uid;\n    }\n\n    uid = uuid4();\n    window.localStorage.setItem('_capuid', uid);\n    return uid;\n  };\n\n  return DevicePluginWeb;\n}(WebPlugin);\n\nexport { DevicePluginWeb };\nvar Device = new DevicePluginWeb();\nexport { Device }; //# sourceMappingURL=device.js.map","map":null,"metadata":{},"sourceType":"module"}