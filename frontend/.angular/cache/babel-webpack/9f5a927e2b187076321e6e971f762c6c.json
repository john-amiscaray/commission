{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Plugins } from '@capacitor/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"./services/lobby.service\";\nimport * as i3 from \"./services/game.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"./services/toast.service\";\nimport * as i7 from \"@angular/common\";\n\nfunction AppComponent_ion_list_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵelementStart(1, \"ion-item\", 3);\n    i0.ɵɵelement(2, \"ion-icon\", 4);\n    i0.ɵɵelementStart(3, \"ion-title\");\n    i0.ɵɵtext(4, \"Home\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-item\", 5);\n    i0.ɵɵelement(6, \"ion-icon\", 6);\n    i0.ɵɵelementStart(7, \"ion-title\");\n    i0.ɵɵtext(8, \"Profile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-item\", 7);\n    i0.ɵɵelement(10, \"ion-icon\", 8);\n    i0.ɵɵelementStart(11, \"ion-title\");\n    i0.ɵɵtext(12, \"Host Game\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"ion-item\", 9);\n    i0.ɵɵelement(14, \"ion-icon\", 10);\n    i0.ɵɵelementStart(15, \"ion-title\");\n    i0.ɵɵtext(16, \"Join Game\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AppComponent_ion_list_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵelementStart(1, \"ion-item\", 3);\n    i0.ɵɵelement(2, \"ion-icon\", 11);\n    i0.ɵɵelementStart(3, \"ion-title\");\n    i0.ɵɵtext(4, \"Leave game\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/lobby\", \"/game\"];\n};\n\nconst {\n  App,\n  BackgroundTask\n} = Plugins;\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(auth, lobby, game, router, platform, toast) {\n      this.auth = auth;\n      this.lobby = lobby;\n      this.game = game;\n      this.router = router;\n      this.platform = platform;\n      this.toast = toast;\n    }\n\n    ngOnInit() {\n      if (this.platform.is('mobile') && !this.platform.is('mobileweb')) {\n        let self = this;\n        App.addListener('appStateChange', state => {\n          if (!state.isActive) {\n            let taskId = BackgroundTask.beforeExit(() => __awaiter(this, void 0, void 0, function* () {\n              console.log(`This is the thing you are looking for: ${this.lobby.connectedToLobby()} | ${this.game.inActiveGame}`);\n\n              if (this.lobby.connectedToLobby()) {\n                this.lobby.leaveLobby();\n              } else if (this.game.inActiveGame) {\n                this.disconnectFromGame();\n              } else {\n                this.auth.resetUUID();\n              }\n\n              BackgroundTask.finish({\n                taskId\n              });\n            }));\n          } else {\n            if (this.lobby.connectedToLobby() && this.router.url === '/lobby') {\n              this.lobby.joinRoom(this.lobby.roomCode, _ => {\n                location.reload();\n              }, e => {\n                this.router.navigate(['']).then(() => {\n                  self.toast.customToastMessage('failed to restore the game. Please try again or start a new one');\n                  console.log(e);\n                });\n              });\n            } else if (this.router.url === '/game' && this.game.inActiveGame) {\n              this.reconnectToGame();\n            } else {\n              this.auth.generateAndSaveUUID();\n            }\n          }\n        });\n      }\n\n      this.auth.generateAndSaveUUID();\n    }\n\n    onUnload() {\n      // Do nothing if the platform is mobile because this is handled by the background task above\n      if (this.platform.is('mobile')) {\n        return;\n      }\n\n      console.log('unload');\n\n      if (this.lobby.connectedToLobby()) {\n        this.lobby.leaveLobby();\n        this.auth.resetUUID();\n      } else if (this.game.inActiveGame) {\n        this.disconnectFromGame();\n      } else {\n        this.auth.resetUUID();\n      }\n    }\n\n    disconnectFromGame() {\n      let self = this;\n      this.game.sendGamePlayerStatus({\n        subject: parseInt(self.auth.getGameId()),\n        status: 'DISCONNECT'\n      });\n    }\n\n    reconnectToGame() {\n      let self = this;\n      this.game.sendGamePlayerStatus({\n        subject: parseInt(self.auth.getGameId()),\n        status: 'CONNECT'\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.LobbyService), i0.ɵɵdirectiveInject(i3.GameService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.Platform), i0.ɵɵdirectiveInject(i6.ToastService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 6,\n    vars: 3,\n    consts: [[\"content-id\", \"main_content\"], [4, \"ngIf\"], [\"id\", \"main_content\", 3, \"beforeunload\"], [\"lines\", \"none\", \"routerLink\", \"home\"], [\"name\", \"home-outline\", 1, \"ion-justify-content-center\"], [\"lines\", \"none\", \"routerLink\", \"profile\"], [\"name\", \"person-circle-outline\"], [\"lines\", \"none\", \"routerLink\", \"host-game\"], [\"name\", \"game-controller-outline\"], [\"lines\", \"none\", \"routerLink\", \"join-game\"], [\"name\", \"enter-outline\"], [\"name\", \"exit-outline\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵelementStart(1, \"ion-menu\", 0);\n        i0.ɵɵelementStart(2, \"ion-content\");\n        i0.ɵɵtemplate(3, AppComponent_ion_list_3_Template, 17, 0, \"ion-list\", 1);\n        i0.ɵɵtemplate(4, AppComponent_ion_list_4_Template, 5, 0, \"ion-list\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-router-outlet\", 2);\n        i0.ɵɵlistener(\"beforeunload\", function AppComponent_Template_ion_router_outlet_beforeunload_5_listener() {\n          return ctx.onUnload();\n        }, false, i0.ɵɵresolveWindow);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpureFunction0(2, _c0).includes(ctx.router.url));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.router.url == \"/game\");\n      }\n    },\n    directives: [i5.IonApp, i5.IonMenu, i5.IonContent, i7.NgIf, i5.IonRouterOutlet, i5.IonList, i5.IonItem, i5.RouterLinkDelegate, i4.RouterLink, i5.IonIcon, i5.IonTitle],\n    styles: [\"#menu_title[_ngcontent-%COMP%]{border-bottom:2px solid #A4A4A4}#title[_ngcontent-%COMP%]{font-weight:700;font-size:32px}ion-list[_ngcontent-%COMP%]{margin-top:20px}ion-list[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{margin:10px 0}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}