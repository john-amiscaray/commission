{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { WebPlugin } from './index';\nimport { extend } from '../util';\n\nvar GeolocationPluginWeb =\n/** @class */\nfunction (_super) {\n  __extends(GeolocationPluginWeb, _super);\n\n  function GeolocationPluginWeb() {\n    return _super.call(this, {\n      name: 'Geolocation',\n      platforms: ['web']\n    }) || this;\n  }\n\n  GeolocationPluginWeb.prototype.getCurrentPosition = function (options) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      return _this.requestPermissions().then(function (_result) {\n        window.navigator.geolocation.getCurrentPosition(function (pos) {\n          resolve(pos);\n        }, function (err) {\n          reject(err);\n        }, extend({\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 0\n        }, options));\n      });\n    });\n  };\n\n  GeolocationPluginWeb.prototype.watchPosition = function (options, callback) {\n    var id = window.navigator.geolocation.watchPosition(function (pos) {\n      callback(pos);\n    }, function (err) {\n      callback(null, err);\n    }, extend({\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 0\n    }, options));\n    return \"\" + id;\n  };\n\n  GeolocationPluginWeb.prototype.clearWatch = function (options) {\n    window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n    return Promise.resolve();\n  };\n\n  return GeolocationPluginWeb;\n}(WebPlugin);\n\nexport { GeolocationPluginWeb };\nvar Geolocation = new GeolocationPluginWeb();\nexport { Geolocation }; //# sourceMappingURL=geolocation.js.map","map":null,"metadata":{},"sourceType":"module"}