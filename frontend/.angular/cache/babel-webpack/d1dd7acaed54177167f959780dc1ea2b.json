{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../services/lobby.service\";\nimport * as i4 from \"../../services/auth.service\";\nimport * as i5 from \"../../services/toast.service\";\nimport * as i6 from \"@ionic/angular\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../common-components/load/load.component\";\n\nfunction HostGamePage_h1_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 7);\n    i0.ɵɵtext(1, \" Create a Game \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HostGamePage_form_7_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r3.gameSettings.controls[\"players\"].errors[\"min\"] || ctx_r3.gameSettings.controls[\"players\"].errors[\"max\"] ? \"you need 3 to 8 players\" : \"\", \" \", ctx_r3.gameSettings.controls[\"players\"].errors[\"required\"] ? \"this field is required\" : \"\", \" \");\n  }\n}\n\nfunction HostGamePage_form_7_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r4.gameSettings.controls[\"seconds\"].errors[\"min\"] || ctx_r4.gameSettings.controls[\"seconds\"].errors[\"max\"] ? \"you need a value between 30 to 120 seconds\" : \"\", \" \", ctx_r4.gameSettings.controls[\"seconds\"].errors[\"required\"] ? \"this field is required\" : \"\", \" \");\n  }\n}\n\nfunction HostGamePage_form_7_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r5.gameSettings.controls[\"rounds\"].errors[\"min\"] || ctx_r5.gameSettings.controls[\"rounds\"].errors[\"max\"] ? \"you need a value between 3 to 10 rounds\" : \"\", \" \", ctx_r5.gameSettings.controls[\"rounds\"].errors[\"required\"] ? \"this field is required\" : \"\", \" \");\n  }\n}\n\nfunction HostGamePage_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function HostGamePage_form_7_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.submit();\n    });\n    i0.ɵɵelementStart(1, \"ion-row\");\n    i0.ɵɵelementStart(2, \"ion-col\", 9);\n    i0.ɵɵelementStart(3, \"ion-card\", 10);\n    i0.ɵɵelementStart(4, \"ion-card-content\");\n    i0.ɵɵelementStart(5, \"ion-item\");\n    i0.ɵɵelementStart(6, \"ion-label\", 11);\n    i0.ɵɵtext(7, \"Number of Players\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"ion-input\", 12);\n    i0.ɵɵtemplate(9, HostGamePage_form_7_div_9_Template, 2, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"ion-item\");\n    i0.ɵɵelementStart(11, \"ion-label\", 14);\n    i0.ɵɵtext(12, \"Seconds Per Round\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"ion-input\", 15);\n    i0.ɵɵtemplate(14, HostGamePage_form_7_div_14_Template, 2, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ion-item\");\n    i0.ɵɵelementStart(16, \"ion-label\", 14);\n    i0.ɵɵtext(17, \"Number of Rounds\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"ion-input\", 16);\n    i0.ɵɵtemplate(19, HostGamePage_form_7_div_19_Template, 2, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"ion-row\");\n    i0.ɵɵelementStart(21, \"ion-col\", 17);\n    i0.ɵɵelementStart(22, \"ion-button\", 18);\n    i0.ɵɵtext(23, \" Host Game \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.gameSettings);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.gameSettings.controls[\"players\"].invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.gameSettings.controls[\"seconds\"].invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.gameSettings.controls[\"rounds\"].invalid);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r1.gameSettings.valid);\n  }\n}\n\nfunction HostGamePage_app_load_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-load\");\n  }\n}\n\nexport let HostGamePage = /*#__PURE__*/(() => {\n  class HostGamePage {\n    constructor(formBuilder, router, game, auth, toast) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.game = game;\n      this.auth = auth;\n      this.toast = toast;\n      this.gameSettings = this.formBuilder.group({\n        players: [5, [Validators.required, numberValidator(), Validators.min(3), Validators.max(8)]],\n        seconds: [60, [Validators.required, numberValidator(), Validators.min(30), Validators.max(120)]],\n        rounds: [5, [Validators.required, numberValidator(), Validators.min(3), Validators.max(10)]]\n      });\n      this.loadingGame = false;\n    }\n\n    ionViewDidEnter() {\n      if (!this.auth.hasValidProfile()) {\n        this.router.navigate(['profile']);\n        this.auth.presentBadProfileError();\n      }\n    }\n\n    submit() {\n      let self = this;\n      this.loadingGame = true;\n      this.game.requestLobbyStart(self.gameSettings.getRawValue(), _ => {\n        self.router.navigate(['lobby']);\n      }, err => {\n        setTimeout(() => {\n          self.loadingGame = false;\n          self.toast.failureToast('Something went wrong trying to host the game. Try refreshing or coming back later. If the problem persists, send a bug report.');\n        }, 2000);\n      });\n    }\n\n    ionViewDidLeave() {\n      this.loadingGame = false;\n    }\n\n  }\n\n  HostGamePage.ɵfac = function HostGamePage_Factory(t) {\n    return new (t || HostGamePage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LobbyService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.ToastService));\n  };\n\n  HostGamePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HostGamePage,\n    selectors: [[\"app-host-game\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[\"color\", \"primary\"], [\"slot\", \"start\"], [\"id\", \"app-background\", \"src\", \"assets/images/background.png\", \"alt\", \"background\"], [\"class\", \"ion-text-center ion-margin-top\", \"id\", \"title\", 4, \"ngIf\"], [1, \"form-grid\"], [\"id\", \"game-settings\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [4, \"ngIf\"], [\"id\", \"title\", 1, \"ion-text-center\", \"ion-margin-top\"], [\"id\", \"game-settings\", 3, \"formGroup\", \"ngSubmit\"], [\"size-lg\", \"4\", \"offset-lg\", \"4\", \"size-md\", \"8\", \"size-xs\", \"10\", \"offset-xs\", \"1\"], [\"id\", \"options-card\"], [\"position\", \"floating\", 1, \"ion-margin-bottom\"], [\"required\", \"\", \"formControlName\", \"players\", \"type\", \"number\", \"min\", \"3\", \"max\", \"8\"], [\"class\", \"error-text\", 4, \"ngIf\"], [\"position\", \"floating\"], [\"required\", \"\", \"formControlName\", \"seconds\", \"type\", \"number\", \"min\", \"30\", \"max\", \"120\"], [\"required\", \"\", \"formControlName\", \"rounds\", \"type\", \"number\", \"min\", \"3\", \"max\", \"10\"], [\"size-lg\", \"2\", \"offset-lg\", \"5\", \"size-xs\", \"8\", \"offset-xs\", \"2\"], [\"type\", \"submit\", \"id\", \"host-button\", 3, \"disabled\"], [1, \"error-text\"]],\n    template: function HostGamePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelement(2, \"ion-menu-button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ion-content\");\n        i0.ɵɵelement(4, \"img\", 2);\n        i0.ɵɵtemplate(5, HostGamePage_h1_5_Template, 2, 0, \"h1\", 3);\n        i0.ɵɵelementStart(6, \"ion-grid\", 4);\n        i0.ɵɵtemplate(7, HostGamePage_form_7_Template, 24, 5, \"form\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, HostGamePage_app_load_8_Template, 1, 0, \"app-load\", 6);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingGame);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loadingGame);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingGame);\n      }\n    },\n    directives: [i6.IonHeader, i6.IonToolbar, i6.IonMenuButton, i6.IonContent, i7.NgIf, i6.IonGrid, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.IonRow, i6.IonCol, i6.IonCard, i6.IonCardContent, i6.IonItem, i6.IonLabel, i6.IonInput, i6.NumericValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i6.IonButton, i8.LoadComponent],\n    styles: [\"#host-button[_ngcontent-%COMP%]{width:100%;padding:0 8px}#title[_ngcontent-%COMP%]{height:100px;font-size:40px;font-family:Marker,serif;text-align:center;line-height:100px}#options-card[_ngcontent-%COMP%]{opacity:.8}.form-grid[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return HostGamePage;\n})();\nexport function numberValidator() {\n  return control => isNaN(control.value) ? {\n    badInput: control.value\n  } : null;\n}","map":null,"metadata":{},"sourceType":"module"}