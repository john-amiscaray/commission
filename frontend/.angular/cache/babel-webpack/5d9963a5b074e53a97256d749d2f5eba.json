{"ast":null,"code":"\"use strict\";\n\nvar UUID = function () {\n  function UUID() {// no-op\n  }\n\n  UUID.UUID = function () {\n    if (typeof window !== \"undefined\" && typeof window.crypto !== \"undefined\" && typeof window.crypto.getRandomValues !== \"undefined\") {\n      // If we have a cryptographically secure PRNG, use that\n      // http://stackoverflow.com/questions/6906916/collisions-when-generating-uuids-in-javascript\n      var buf = new Uint16Array(8);\n      window.crypto.getRandomValues(buf);\n      return this.pad4(buf[0]) + this.pad4(buf[1]) + \"-\" + this.pad4(buf[2]) + \"-\" + this.pad4(buf[3]) + \"-\" + this.pad4(buf[4]) + \"-\" + this.pad4(buf[5]) + this.pad4(buf[6]) + this.pad4(buf[7]);\n    } else {\n      // Otherwise, just use Math.random\n      // https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n      // https://stackoverflow.com/questions/11605068/why-does-jshint-argue-against-bitwise-operators-how-should-i-express-this-code\n      return this.random4() + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + \"-\" + this.random4() + this.random4() + this.random4();\n    }\n  };\n\n  UUID.pad4 = function (num) {\n    var ret = num.toString(16);\n\n    while (ret.length < 4) {\n      ret = \"0\" + ret;\n    }\n\n    return ret;\n  };\n\n  UUID.random4 = function () {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  };\n\n  return UUID;\n}();\n\nexports.UUID = UUID; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}